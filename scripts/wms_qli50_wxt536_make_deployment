#!/bin/csh
# Make a deployment tar file.
# This contains:
# 	The wms-qli50-wxt536 binary and configuration file
# 	Test programs to communicate with the Vaisala Wxt536 weather station
# 	Test programs to query a Vaisala Qli50 (client-side interaction), and an emulation server
#	Startup scripts
if ( ${#argv} != 1 ) then
	echo "Please specify a deployment machine."
	echo "$0 <machine>"
	exit 1
endif
set machine_name = "$1"
if ( "${machine_name}" == "-help") then
	echo "$0 <machine>"
	exit 0
endif
# dev root directory
set dev_dir 		= "~dev"
# dev binary root directory
set dev_bin_dir 	= "${dev_dir}/bin"
# directory script was run in
set current_dir		= `pwd`
# temporary directory containing root of deployment tree (which becomes root of tar).
set deployment_dir 	= "/tmp/wms_qli50_wxt536_deployment"
# temporary directory for deployment temporary files
set deployment_tmp_dir 	= "/tmp/wms_qli50_wxt536_deployment/tmp"
# temporary directory containing root icc directory.
set deployment_wms_dir 	= "/tmp/wms_qli50_wxt536_deployment/wms_qli50_wxt536"
# temporary directory containing root bin directory.
set deployment_bin_dir 	= "/tmp/wms_qli50_wxt536_deployment/wms_qli50_wxt536/bin"
# directory location of tar
set deployment_tar_dir 	= "${dev_dir}/public_html/wms-qli50-wxt536/deployment"
# name of tar file
set deployment_tar 	= "wms_qli50_wxt536_deployment_${machine_name}.tar"
# name of install script
set install_script      = wms_qli50_wxt536_tar_install
# machine dependant config
set init_d_dir          = "/etc/init.d"
setenv GREP "/bin/grep"
set bin_file_type = "ELF 64-bit LSB"
#
# Clear old deployment.
#
if (-d ${deployment_dir}) then
	echo "Deployment directory ${deployment_dir} already exists:clearing..."
	rm -rf ${deployment_dir}
endif
#
# Create directory structure
#
echo "Creating directory structure..."
set dir_count = 0
set dir_list = "${deployment_dir} ${deployment_dir}/${init_d_dir} ${deployment_wms_dir} ${deployment_bin_dir} ${deployment_wms_dir}/tmp ${deployment_wms_dir}/tmp/log_archive ${deployment_wms_dir}/log ${deployment_bin_dir}/scripts ${deployment_bin_dir}/wms-qli50-wxt536/c/${HOSTTYPE} ${deployment_bin_dir}/wms-qli50-wxt536/qli50/test/${HOSTTYPE} ${deployment_bin_dir}/wms-qli50-wxt536/wxt536/test/${HOSTTYPE} ${deployment_bin_dir}/wms-qli50-wxt536/serial/test/${HOSTTYPE} ${deployment_bin_dir}/wms-qli50-wxt536/scripts ${deployment_bin_dir}/wms-qli50-wxt536/config ${deployment_bin_dir}/ics_util/c/${HOSTTYPE} ${deployment_bin_dir}/javalib ${deployment_bin_dir}/lib/${HOSTTYPE} ${deployment_bin_dir}/wms-qli50-wxt536/test/${HOSTTYPE} ${deployment_bin_dir}/log_udp/test/${HOSTTYPE} ${deployment_bin_dir}/autobooter/java "
foreach dir ( ${dir_list} )
	mkdir -p ${dir}
	if ($status != 0) then
	   echo "Failed to make directory ${dir}"
	   exit 2
	endif
	@ dir_count ++
end
echo "${dir_count} directories created."
#
# Copy jars
#
echo "Copying jars..."
set jar_list = "ngat_net.jar ngat_util.jar ngat_util_logging.jar ngat_autoguider.jar ngat_swing.jar ngat_sound.jar"
set jar_count = 0
foreach jar ( ${jar_list} )
	echo "jar : ${jar}"
# copy jar to deployment location
	cp ${dev_bin_dir}/javalib/${jar} ${deployment_bin_dir}/javalib
	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/javalib/${jar} to ${deployment_bin_dir}/javalib"
	    exit 3
	endif
# ident contents of jar
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cp ${dev_bin_dir}/javalib/${jar} ${deployment_tmp_dir}
	cd ${deployment_tmp_dir}
	jar xvf ${jar} > ${deployment_tmp_dir}/jar_output.txt
	find . -name '*.class' -print > ${deployment_tmp_dir}/class_list.txt
	foreach class ( `cat ${deployment_tmp_dir}/class_list.txt` )
		( ident ${class} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
		set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
		echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
	end
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_wms_dir}/ident_list.txt 
	endif
# keep track of number of jars processed
	@ jar_count ++
end
echo "${jar_count} jars copied."
#
# Java classes
#
echo "Copying Java class directories..."
set java_class_dir_list = "autobooter/java"
set java_class_dir_count = 0
set java_class_file_count = 0
foreach java_class_dir ( ${java_class_dir_list} )
	echo "Java class directory : ${java_class_dir}"
# copy java_class_dir to deployment location
	cp ${dev_bin_dir}/${java_class_dir}/*.class ${deployment_bin_dir}/${java_class_dir}
	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/${java_class_dir}/*.class to ${deployment_bin_dir}/${java_class_dir}"
	    exit 4
	endif
# ident each file in dir
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cd ${deployment_bin_dir}
	find ${java_class_dir} -name '*.class' -print > ${deployment_tmp_dir}/class_list.txt
	foreach class ( `cat ${deployment_tmp_dir}/class_list.txt` )
		( ident ${class} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
		set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
		echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
		@ java_class_file_count ++
	end
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_wms_dir}/ident_list.txt 
	endif
# keep track of number of java_class_dirs processed
	@ java_class_dir_count ++
end
echo "${java_class_dir_count} Java class directories copied with ${java_class_file_count} Java classes in them."
#
# C libraries
#
echo "Copying C libraries..."
set clib_list = "liblog_udp.so libwms-qli50-wxt536_serial.so libwms-qli50-wxt536_qli50.so libwms-qli50-wxt536_wxt536.so"
set clib_count = 0
foreach clib ( ${clib_list} )
	echo "C Library : ${clib}"
# copy clib to deployment location
	if( -r ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} ) then
	    cp ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} ${deployment_bin_dir}/lib/${HOSTTYPE}/
	else if( -r ${dev_bin_dir}/estar/lib/${HOSTTYPE}/${clib} ) then
	    cp ${dev_bin_dir}/estar/lib/${HOSTTYPE}/${clib} ${deployment_bin_dir}/lib/${HOSTTYPE}/
	else
	    echo "Copy failed: Could not find ${clib} in ${dev_bin_dir}/lib/${HOSTTYPE} or ${dev_bin_dir}/estar/lib/."
	    exit 5
	endif

	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} to ${deployment_bin_dir}/lib/${HOSTTYPE}/"
	    exit 5
	endif
# ident contents of lib
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cd ${deployment_bin_dir}
	( ident lib/${HOSTTYPE}/${clib} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
	set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
	echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_wms_dir}/ident_list.txt 
	endif
# keep track of number of clibs processed
	@ clib_count ++
end
echo "${clib_count} C libraries copied."
#
# C programs
#
echo "Copying C program directories..."
set dir_list = "wms-qli50-wxt536/c/${HOSTTYPE} wms-qli50-wxt536/qli50/test/${HOSTTYPE} wms-qli50-wxt536/wxt536/test/${HOSTTYPE} wms-qli50-wxt536/serial/test/${HOSTTYPE} ics_util/c/${HOSTTYPE} log_udp/test/${HOSTTYPE}"
set dir_count = 0
set file_count = 0
# clean out deployment_tmp_dir
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
mkdir ${deployment_tmp_dir}
cd ${deployment_bin_dir}
# go through directory list
foreach dir ( ${dir_list} )
	echo "C program directory : ${dir}"
# get file list
	find ${dev_bin_dir}/${dir}/* > ${deployment_tmp_dir}/file_list.txt
	foreach file ( `cat ${deployment_tmp_dir}/file_list.txt` )
# check file is an executable
#		set file_type = `file -L ${file}`
#		echo "File ${file} is of type ${file_type}." 
		file -L ${file} | ${GREP} -q "${bin_file_type}"
		set grep_status = $status
		if ( ${grep_status} == 0 ) then
			echo "Deploying ${file}."
# copy file to deployment location
			cp ${file} ${deployment_bin_dir}/${dir}
			set cp_status = $status
			if( ${cp_status} != 0 ) then
			    echo "Copy failed: ${file} to ${deployment_bin_dir}/${dir}"
			    exit 6
			endif
# ident file and add to list
			( ident ${dir}/${file:t} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
			set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
			echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
			@ file_count ++
		else
			echo "NOT Deploying ${file}."
		endif
	end
	rm -f ${deployment_tmp_dir}/file_list.txt
# keep track of number of dirs processed
	@ dir_count ++
end
if ( -r ${deployment_tmp_dir}/ident_list.txt) then
	cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_wms_dir}/ident_list.txt 
endif
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
echo "${dir_count} C program directories copied, containg ${file_count} C programs."
#
# Scripts
#
echo "Copying scripts..."
set file_list = "bin/scripts/killhup.csh bin/wms-qli50-wxt536/scripts/wms_qli50_wxt536_engineering_mode"
set file_count = 0
cd ${dev_dir}
foreach file ( ${file_list} )
    set new_file = `echo ${file} | sed "s#${machine_name}\.##" | sed "s#${HOSTTYPE}\.##"`
    cp ${dev_dir}/${file} ${deployment_wms_dir}/${new_file}
    set cp_status = $status
    if( ${cp_status} != 0 ) then
	echo "Copy failed: ${dev_dir}/${file} to ${deployment_wms_dir}/${new_file}"
	exit 4
    endif
    @ file_count ++
end
echo "${file_count} scripts copied."
#
# Configs
#
# in bin sub-directories
echo "Copying machine configuration files..."
set file_list = "wms-qli50-wxt536/config/qli50_wxt536.conf autobooter/java/${machine_name}.autobooter.properties "
set file_count = 0
cd ${dev_dir}
foreach file ( ${file_list} )
    set new_file = `echo ${file} | sed "s#${machine_name}.livjm.ac.uk.##" | sed "s#${machine_name}.##"`
    cp ${dev_bin_dir}/${file} ${deployment_bin_dir}/${new_file}
    set cp_status = $status
    if( ${cp_status} != 0 ) then
	echo "Copy failed: ${dev_bin_dir}/${file} to ${deployment_bin_dir}/${new_file}"
	exit 5
    endif
    @ file_count ++
end
echo "${file_count} configuration files copied."
#
# /etc init scripts
#
echo "Copying Autobooter initialisation script."
set from_file = "${dev_bin_dir}/autobooter/java/${machine_name}.autobooter"
set to_file = "${deployment_dir}/${init_d_dir}/autobooter"
cp  ${from_file} ${to_file}
set cp_status = $status
if( ${cp_status} != 0 ) then
    echo "Copy failed: ${from_file} to ${to_file}"
    exit 6
endif
#
# Tidy deployment temp
#
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
#
# Create deployment tar
#
echo "--------------------------"
echo "Creating deployment tar..."
cd ${deployment_dir}
tar cvf ${deployment_tar_dir}/${deployment_tar} .
echo "GZipping deployment tar..."
cd ${deployment_tar_dir}
rm -f ${deployment_tar}.gz
gzip ${deployment_tar}
echo "Deployment tar : ${deployment_tar_dir}/${deployment_tar}.gz"
echo "Installation script : ${current_dir}/${install_script}"
rm -rf ${deployment_dir}
echo "Download from http://ltdevsrv.livjm.ac.uk/~dev/wms-qli50-wxt536/deployment/index.html."
echo "Download ${deployment_tar}.gz wms_qli50_wxt536_tar_install wms_qli50_wxt536_cshrc wms_qli50_wxt536_cshrc_edit.awk README.DEPLOYMENT"
echo "Deployment ready."
